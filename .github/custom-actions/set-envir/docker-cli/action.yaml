name: "Set Docker CLI"
description: "Serve docker environment (in current runner)"

runs:
  using: composite
  steps:
    - name: 🏃 [DOCKER] Check inputs
      shell: bash
      run: |
        cat <<EOF
        🔎 install-compose : ${{ inputs.install-compose }} (Tip. If not set, skip to install 'docker-compose')
        EOF

    - if: ${{ env.ACT }}
      name: 🏃 [DOCKER] Enable docker command without sudo appended (for ACT in local running)
      shell: bash
      run: |
        sudo usermod -aG docker $(whoami)
        sudo chmod 666 /var/run/docker.sock

    - if: ${{ !env.ACT }}
      name: 🚀 [DOCKER] Check support for dockerd to containerize
      shell: bash
      run: |
        [[ ${HAS_DOCKERD} != "true" ]] && {
            echo "🙅‍♂️ [SUSPEND] The environment 'HAS_DOCKERD' is not set. (Unfortunatly this workflow need dockerd sidecar to use 'docker-compose')" >&2 
            exit 1
        }
        echo "🙆‍♂️ [PASS] The dockerd environment is enabled for this runner."

    - if: ${{ !env.ACT }}
      name: 🏃 [DOCKER] Pull docker cache
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-multi-buildx-${{ matrix.project }}-${{ hashFiles('docker-compose.yaml') }}
        restore-keys: |
          ${{ runner.os }}-multi-buildx-${{ matrix.project }}-
          ${{ runner.os }}-multi-buildx-
