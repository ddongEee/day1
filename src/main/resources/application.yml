## ======================================
## Embedded Tomcat Server Properties
## * Ref. https://docs.spring.io/spring-boot/docs/2.6.4/reference/htmlsingle/#application-properties.server
## ======================================
server:
  port: ${SERVER_PORT:8081}
  servlet:
    context-path: "/"
    encoding:
      charset: "UTF-8"
      enabled: true
      force: true
  tomcat:
    accept-count: ${SERVER_ACCEPT_COUNT:100}
    threads:
      max: ${SERVER_TRHEAD_MAX:200}
      min-spare: ${SERVER_TRHEAD_MIN:100}

## ===================================
## TODO: Spring Actuator
## * Ref. https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html#actuator.endpoints.health.auto-configured-health-indicators
## ===================================
#management:
#  health:
#    defaults.enabled: false
#    livenessState.enabled: true
#    readinessState.enabled: true

## ======================================
## DATASOURCE & JPA & KAFKA
## * Ref. maximum-pool-size > https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing#connections--core_count--2--effective_spindle_count
## ======================================
spring:
  application:
    name: day1app
  datasource:
    driver-class-name: "${DB_DRIVER_CLASS_NAME:org.postgresql.Driver}"
    url: "jdbc:${DB_ENGINE:postgresql}://${DB_HOST:localhost}:${DB_PORT:5432},${DB_HOST_READONLY:localhost}:${DB_PORT:5432}/${DB_DATABASE_NAME:day1}?${DB_PRIMARY_OPTS:}"
    username: "${DB_USERNAME:postgres}"
    password: "${DB_PASSWORD:postgres1234}"
    connectionTestQuery: "SELECT 1"
    maximumPoolSize: ${DB_MAX_POOL_SIZE:50}
    minimumIdle: ${DB_MIN_IDLE:50}
  datasource-read-only:
    driver-class-name: "${DB_DRIVER_CLASS_NAME:org.postgresql.Driver}"
    url: "jdbc:${DB_ENGINE:postgresql}://${DB_HOST:localhost}:${DB_PORT:5432},${DB_HOST_READONLY:localhost}:${DB_PORT:5432}/${DB_DATABASE_NAME:day1}?${DB_SECONDARY_OPTS:}"
    username: "${DB_USERNAME:postgres}"
    password: "${DB_PASSWORD:postgres1234}"
    connectionTestQuery: "SELECT 1"
    maximumPoolSize: ${DB_MAX_POOL_SIZE:50}
    minimumIdle: ${DB_MIN_IDLE:50}
  jpa:
    database: "${DB_ENGINE:postgresql}"
    hibernate:
      ddl-auto: validate # create disabled: schema has been managed by flyway on docker-compose
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        default_schema: "${DB_DEFAULT_SCHEMA:builder}"
        dialect: org.hibernate.dialect.PostgreSQLDialect
        hbm2ddl:
          import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
        format_sql: false
        show-sql: false
        use_sql_comments: true
        use_jdbc_metadata_defaults: true

## ======================================
## Actuator
## * Ref. Production-ready Features > https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html
## ======================================
management:
  health:
    defaults:
      enabled: false
    db:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
      show-components: always
      group:
        readiness:
          show-details: always
          include: "readinessState,db"
  metrics:
    tags:
      application: ${spring.application.name}

microservice:
  day2:
    url: "http://${DAY2_HOST:localhost}:${DAY2_PORT:8082}"