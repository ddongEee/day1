name: "Check RC Number in repository"
description: "Check release candidate number with input version"

inputs:
  working-directory:
    description: "Where the git repository is located"
    required: false
    default: "."
  semantic-version:
    description: "Sementic version to check range of release candidate"
    required: true

outputs:
  LAST_RC_NUM:
    description: "Last release candidate number is exist in git repository"
    value: ${{ steps.check-rc-num.outputs.LAST_RC_NUM }}
  NEXT_RC_NUM:
    description: "Next release candidate number is added '1' to 'LAST_RC_NUM'"
    value: ${{ steps.check-rc-num.outputs.NEXT_RC_NUM }}

runs:
  using: composite
  steps:
    - name: üèÉ [CHECK/RC-NUM] Check inputs
      shell: bash
      run: |
        cat <<EOF
        üîé working-directory : ${{ inputs.working-directory }}
        üîé semantic-version  : ${{ inputs.semantic-version }}
        EOF

    - name: üèÉ [CHECK/RC-NUM] Fetch tags
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        echo "üîé Fecth all tag data first"
        git fetch --tags --force
        echo "----------------------------------------------------"
        echo "üîé Here is all tag list"
        git tag --list | cat
        echo "----------------------------------------------------"
        echo "üîé Here are all same tags with SemVer (${{ inputs.semantic-version }})"
        git tag --list | grep "${{ inputs.semantic-version }}"

    - name: üèÉ [CHECK/RC-NUM] Select release candidates only in this version (${{ inputs.semantic-version }})
      id: check-rc-num
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        LAST_RC_NUM=$(git tag --list | grep "${{ env.SEM_VERS }}_rc" | awk -F 'rc' '{print $2}' | sort --numeric-sort --reverse | head -n 1)
        NEXT_RC_NUM=$((${LAST_RC_NUM} + 1))
        cat <<EOF
        üîé LAST_RC_NUM : ${LAST_RC_NUM} // last
        üîé NEXT_RC_NUM : ${NEXT_RC_NUM} // increament
        EOF
        echo "::set-output name=LAST_RC_NUM::${LAST_RC_NUM}"
        echo "::set-output name=NEXT_RC_NUM::${NEXT_RC_NUM}"
