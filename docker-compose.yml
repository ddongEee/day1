version: '3.8'
services:
  db:
    image: day1_db:dev
    container_name: db
    build:
      context: build-src/system-persistence/db
      dockerfile: Dockerfile-PostgreSQL
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      TZ: Asia/Seoul
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres1234}
      POSTGRES_INITDB_ARGS: --encoding=UTF-8
    restart: unless-stopped
    volumes:
      - ${DB_VOLUME:-./build-src/system-persistence/db/mount}:/var/lib/postgresql/data

  mig-db-schema:
    depends_on:
      - db
    image: day1_mig:dev-schema
    container_name: mig-db-schema
    build:
      context: build-src/system-persistence/db
      dockerfile: Dockerfile-FlyWay
      args:
        MIG_SCOPE: sql/ddl-schema
    command: |
      -url=jdbc:postgresql://db:${DB_PORT:-5432}/${DB_DATABASE_NAME:-day1}
      -defaultSchema=public
      -schemas=${DB_DEFAULT_SCHEMA:-builder}
      -user=${DB_USERNAME:-postgres}
      -password=${DB_PASSWORD:-postgres1234}
      -connectRetries=60
      clean migrate info

  mig-db-dataset:
    depends_on:
      - db
      - mig-db-schema
    image: day1_mig:dev-dataset
    container_name: mig-db-dataset
    build:
      context: build-src/system-persistence/db
      dockerfile: Dockerfile-FlyWay
      args:
        MIG_SCOPE: sql/dml-dataset
    command: |
      -url=jdbc:postgresql://db:${DB_PORT:-5432}/${DB_DATABASE_NAME:-day1}
      -defaultSchema=public
      -schemas=${DB_DEFAULT_SCHEMA:-builder}
      -user=${DB_USERNAME:-postgres}
      -password=${DB_PASSWORD:-postgres1234}
      -connectRetries=60
      -outOfOrder=true
      -ignorePendingMigrations=true
      -ignoreIgnoredMigrations=true
      repair info migrate info    

volumes:
  db-data:
    external: true