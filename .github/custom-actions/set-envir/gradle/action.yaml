name: "Set Gradle environment"
description: "Serve Gradle environment"

inputs:
  set-gradle-version:
    description: "Fixed gradle version for naming of dist zip file (check release: https://services.gradle.org/distributions/)"
    required: false
    default: "7.5"
  set-java-distribution:
    description: "Fixed java distribution"
    required: false
    default: "corretto"
  set-java-version:
    description: "Fixed java version"
    required: false
    default: "11"
  set-working-directory:
    description: "Where 'gradlew' file and 'gradle' folder exist"
    required: false
    default: "."

runs:
  using: composite
  steps:
    - name: üèÉ [GRADLE/JVM] Check inputs
      id: gradle-bridge
      shell: bash
      run: |
        cat <<EOF
        üîé set-gradle-version    : ${{ inputs.set-gradle-version }}
        üîé set-java-version      : ${{ inputs.set-java-version }}
        üîé set-java-distribution : ${{ inputs.set-java-distribution }}
        üîé set-working-directory : ${{ inputs.set-working-directory }}
        EOF

        echo "::set-output name=GRADLE_VERS::${{ inputs.set-gradle-version }}"
        echo "::set-output name=JAVA_VERS::${{ inputs.set-java-version }}"
        echo "::set-output name=JAVA_DIST::${{ inputs.set-java-distribution }}"
        echo "::set-output name=WORK_DIR::${{ inputs.set-working-directory }}"

    - if: ${{ !env.ACT }}
      name: üèÉ [GRADLE/JVM] Install java (${{ steps.gradle-bridge.outputs.JAVA_DIST }}:${{ steps.gradle-bridge.outputs.JAVA_VERS }})
      uses: actions/setup-java@v3
      with:
        distribution: ${{ steps.gradle-bridge.outputs.JAVA_DIST }} # Ref. https://github.com/actions/setup-java#supported-distributions
        java-version: ${{ steps.gradle-bridge.outputs.JAVA_VERS }}
        architecture: x64
        check-latest: true
        cache: 'gradle'

    - name: üèÉ [GRADLE/JVM] Check 'java' exsits
      continue-on-error: true
      shell: bash
      run: java --version

    - name: üèÉ [GRADLE/JVM] Pull gradle cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ matrix.project }}-${{ hashFiles('settings.gradle', 'build.gradle', 'gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-${{ matrix.project }}-
          ${{ runner.os }}-gradle-

    - name: üèÉ [GRADLE] Overwrite 'gradle-wrapper.properties'
      shell: bash
      working-directory: ${{ steps.gradle-bridge.outputs.WORK_DIR }}
      run: |
        cat <<EOF > gradle/wrapper/gradle-wrapper.properties && cat gradle/wrapper/gradle-wrapper.properties
        ## ! REPLACED BY GITHUB WORKFLOW
        distributionBase=GRADLE_USER_HOME
        distributionPath=wrapper/dists
        distributionUrl=https\://services.gradle.org/distributions/gradle-${{ steps.gradle-bridge.outputs.GRADLE_VERS }}-bin.zip
        zipStoreBase=GRADLE_USER_HOME
        zipStorePath=wrapper/dists
        EOF

    - name: üèÉ [GRADLE] Check wrapper dependencies
      working-directory: ${{ inputs.set-working-directory }}
      shell: bash
      run: |
        echo "Generating the Wrapper files requires an installed version of the Gradle runtime on runner"
        chmod +x ./gradlew && ./gradlew wrapper
